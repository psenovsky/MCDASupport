% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/vikor.R
\name{vikor}
\alias{vikor}
\title{VIKOR method for multiple criteria decision making}
\value{
initialized and computed multicritera problem using VIKOR method
}
\description{
The acronym VIKOR stands for: VlseKriterijumska Optimizacija I Kompromisno
 Resenje, in Serbian multicriteria optimization and compromise solution. The
 method has been especially designed to deal with problematic situations
 when the alternatives are characterized by non-commensurable and
 conflicting criteria, for which VIKOR provides compromise solution.
 Methodologically VIKOR is close to another method TOPSIS. Original VIKOR
 uses five steps to derive such compromise solution.

Step 1: determine best and worst values of all criteria by serchinch for min
 and max values in the performance matrix for all criteria.

\mjsdeqn{f^*_j = max_i f_{ij}}

\mjsdeqn{f^-_j = min_i f_{ij}}

Step 2: compute values of Si and Ri

\mjsdeqn{S_i = \sum_{j=1}^n \frac{w_j(f^*_j - f_{ij})}{f^*_j - f^-_j}, i = 1,2,...,m, j = 1,2,...,n}

\mjsdeqn{R_i = max_i \frac{w_j(f^*_j - f_{ij})}{f^*_j - f^-_j}, i = 1,2,...,m, j = 1,2,...,n}

where n is number of criteria, m number of alternatives and w are criteria
 weights.

Step 3: compute values of Qi

\mjsdeqn{Q_i = v \frac{S_i - S^*}{S^- - S^*} + (1 - v) \frac{R_i - R^*}{R^- - R^*}, i = 1,2,...,m}

where \mjseqn{S^* = min_i S_i},
 \mjseqn{S^- = max_i S_i}, \mjseqn{R^* = min_i R_i},
 \mjseqn{R^- = max_i R_i} and v is the weight for strategy of majority of
 the criteria.

Note that the v has in Qi connection to 1 - v (individual regret). By
 specifying various values of v one can influence impact left or right term
 of the equation has on overal result. \mjseqn{v \in (0,1)}, where v = 0.5
 means balance between both terms. If function's parameter v is not set the
 procedure will approximate its value by:

\mjsdeqn{v = \frac{n + 1}{2n}}

Step 4: order alternatives by S, R, Q

Step 5: propose compromise solution

The compromise solution is identified by order of Q, looking at the S or R
 depending on v.If the winner is the same, we have solution. Otherwise
 compromise solution needs to be made using 1/(m - 1) value as test
 criterion. Compromise is formed from all alternatives in Q where the
 difference between first and tested value is lover than this criterion.
}
\examples{

## ------------------------------------------------
## Method `vikor$new`
## ------------------------------------------------

PM <- cbind(
   c(8,7,2,1),
   c(5,3,7,5),
   c(7,5,6,4),
   c(9,9,7,3),
   c(11,10,3,7),
   c(6,9,5,4)
)
colnames(PM) <- c('Site 1', 'Site 2', 'Site 3', 'Site 4', 'Site 5',
                  'Site 6')
rownames(PM) <- c('Investment costs (million EUR)',
                  'Employment needs (hundred employees)',
                  'Social impact (1-7)',
                  'Environmental impact (1-7)')
PM <- t(PM)
minmax <- 'max'
w <- c(0.4, 0.4, 0.1, 0.2)
v <- 0.5
result <- vikor$new(PM, w, minmax, v)
}
\references{
ALAOUI, Mohamed El. Fuzzy TOPSIS: Logic, Approaches, and Case Studies. Boca
 Raton: CRC Press, 2021. 216 s. ISBN 978-0-367-76748-8.

Papathanasiou, Jason, Ploskas, Nikolaos. Multiple Criteria Decision Aid
 Methods, Examples and Python Implementations. Springer, 173 p., ISBN
 978-3-319-91648-4.
}
\author{
Pavel Šenovský \email{pavel.senovsky@vsb.cz}
}
\keyword{TOPSIS}
\keyword{VIKOR}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{pm_orig}}{original (not normalized) performance matrix}

\item{\code{pm}}{normalized performance matrix (direction of all criteria is
maximalize)}

\item{\code{w}}{vector containing the weights of the criteria.}

\item{\code{minmax}}{criteria MinMax Vector containing the preference direction
on each of the criteria. "min" (resp."max") indicates that the
criterion has to be minimized (maximized).}

\item{\code{v}}{weight for strategy of majority of the criteria in interval
(0-1). If no value provided procedure assigns value 0.5}

\item{\code{S}}{ordered list of alternatives using S-metric}

\item{\code{R}}{ordered list of alternatives using R-metric}

\item{\code{Q}}{rdered list of alternatives using Q-metric}

\item{\code{compromiseSolution}}{list of alternatives forming compromise
solution (based on Q, S, R metrics)}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-vikor-new}{\code{vikor$new()}}
\item \href{#method-vikor-compute}{\code{vikor$compute()}}
\item \href{#method-vikor-summary}{\code{vikor$summary()}}
\item \href{#method-vikor-clone}{\code{vikor$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-vikor-new"></a>}}
\if{latex}{\out{\hypertarget{method-vikor-new}{}}}
\subsection{Method \code{new()}}{
Public constructor of the class. It validates provided model parameters,
 initializes the class and computes results of the MCDA problem using¨
 VIKOR method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{vikor$new(pm, w, minmax = "max", v = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{pm}}{Matrix or data frame containing the performance table. Each
row corresponds to an alternative, and each column to a criterion.
Only numeric values expercted. Rows and columns are expected to be
named.}

\item{\code{w}}{vector containing the weights of the criteria.}

\item{\code{minmax}}{criteria MinMax Vector containing the preference direction
on each of the criteria. "min" (resp."max") indicates that the
criterion has to be minimized (maximized).}

\item{\code{v}}{weight for strategy of majority of the criteria in interval
(0-1). If no value provided procedure assigns value 0.5}
}
\if{html}{\out{</div>}}
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{PM <- cbind(
   c(8,7,2,1),
   c(5,3,7,5),
   c(7,5,6,4),
   c(9,9,7,3),
   c(11,10,3,7),
   c(6,9,5,4)
)
colnames(PM) <- c('Site 1', 'Site 2', 'Site 3', 'Site 4', 'Site 5',
                  'Site 6')
rownames(PM) <- c('Investment costs (million EUR)',
                  'Employment needs (hundred employees)',
                  'Social impact (1-7)',
                  'Environmental impact (1-7)')
PM <- t(PM)
minmax <- 'max'
w <- c(0.4, 0.4, 0.1, 0.2)
v <- 0.5
result <- vikor$new(PM, w, minmax, v)
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-vikor-compute"></a>}}
\if{latex}{\out{\hypertarget{method-vikor-compute}{}}}
\subsection{Method \code{compute()}}{
Computes VIKOR model based on parametrs specified in constructor.
 Normally this methods does not need to be run manually as constructor
 calls it automatically.

Manual re-computation si required only if the user changes class' fields
 without using the constructor.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{vikor$compute()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-vikor-summary"></a>}}
\if{latex}{\out{\hypertarget{method-vikor-summary}{}}}
\subsection{Method \code{summary()}}{
Creates summary for VIKOR model and sends it to console.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{vikor$summary()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-vikor-clone"></a>}}
\if{latex}{\out{\hypertarget{method-vikor-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{vikor$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
