% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/promethee2.R
\name{promethee2}
\alias{promethee2}
\title{method for computations of partial preference using PROMETHEE II method}
\description{
PROMETHEE stands for Preference Ranking Organization Method for Enrichment
 Evaluation. While \link{promethee1} focuses on computation of
 flows and establishment of basic outranking relation between the
 alternatives, PPROMETHEE II takes the proces one step further and provides
 full ranking of alternatives.

Positive, negative and net flows are computed in same way as in PROMETHEE I,
 see \code{\link{PROMETHEE}} function, which serves as general
 implementation of the approach in PROMETHEE I - III implementation in this
 package.

PROMETHEE II has very straighforward approach to computation of the ranks for
 alternatives. It takes net flow provided by PROMETHEE function and orders it
 decresingly. Alternatives with same values do have same rank, othervise we
 get full order of alternatives.
}
\examples{

## ------------------------------------------------
## Method `promethee2$new`
## ------------------------------------------------

# Example from Fuzzy TOPSIS book (see references)
# ammended error in tab. 4.9, the computation presumes maximization of
# all criteria
PM <- cbind(
  c(80, 65, 83, 40, 52, 94),
  c(90, 58, 60, 80, 72, 96),
  c(600, 200, 400, 1000, 600, 700),
  c(54, 97, 72, 75, 20, 36),
  c(8, 1, 4, 7, 3, 5),
  c(5, 1, 7, 10, 8, 6)
)
colnames(PM) <- c('C1', 'C2', 'C3', 'C4', 'C5', 'C6')
rownames(PM) <- c('A1', 'A2', 'A3', 'A4', 'A5', 'A6')
minmax <- 'max'
shape <- c('U-shape', 'V-shape', 'linear', 'level', 'default',
           'Gaussian')
p <- c(10, 0, 450, 50, 0, 0) #indifference threshold
q <- c(0, 30, 50, 10, 0, 0) #prefference threshold
s <- c(0,0,0,0,0,5) #intermediate threshold
w <- c(0.1667, 0.1667, 0.1667, 0.1667, 0.1667, 0.1665)
result <- promethee2$new(PM, shape, w, minmax, q, p, s)
}
\references{
ALAOUI, Mohamed El. Fuzzy TOPSIS: Logic, Approaches, and Case Studies. Boca
 Raton: CRC Press, 2021. 216 s. ISBN 978-0-367-76748-8.
}
\author{
Pavel Šenovský \email{pavel.senovsky@vsb.cz}
}
\keyword{promethee}
\keyword{promethee2}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{pm_orig}}{original (not transformed) performance matrix of
alternatives in criteria}

\item{\code{pm}}{performance matrix of alternatives in criteria (all criteria
are maximized)}

\item{\code{pref_function}}{vector, specifies type of function used to compute
preferences. Need to be set for each criterion. Possible values are:
'default', 'U-shape', 'V-shape', 'level', 'linear', 'Gaussian'. Choice
of function type will decide on what type of threshold (if any) is
required for computation. Each criterion can use different preference
function.}

\item{\code{w}}{vector of weights}

\item{\code{minmax}}{direction (max or min) of criteria optimization}

\item{\code{i_threshold}}{vector of indifference thresholds}

\item{\code{p_threshold}}{vector of proference thresholds}

\item{\code{im_threshold}}{vector containing intermetiate thresholds for
criteria. only Gaussian type performance functions rewuire this type of
threshold. If prefference and indifference thresholds are present, the
PROMETHEE function will try to 'gues' intermediate threshold as value
right in the middle between these thresholds.}

\item{\code{positiveFlow}}{vector representing how the alternative is preffered
to other alternatives}

\item{\code{negativeFlow}}{vector representing how altenative is outranked by
other alternatives}

\item{\code{netFlow}}{positive - negative flow, forms an indicator PROMETHEE II
uses to directly rank the alternatives}

\item{\code{preferenceDegree}}{matrix representing aggregated weighted
preferences of the alternatives across the criteria}

\item{\code{preferenceDegreeUnw}}{list of matrixes with unweighted preferences,
separate matrix for each criterion}

\item{\code{pairweiseComparison}}{list of matrixes measuring nominal
differences in alternatives performance in criterions. Separate
matrixes are constructed for each criterion.}

\item{\code{rankedList}}{ranked list of alternatives}

\item{\code{rankedListNOF}}{sorted list of alternatives with assigned net
outranking flow indicator, which can be used to sort the list.}

\item{\code{preferenceMatrix}}{preference matrix describing ourranking
relation between the alternatives}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-promethee2-new}{\code{promethee2$new()}}
\item \href{#method-promethee2-compute}{\code{promethee2$compute()}}
\item \href{#method-promethee2-summary}{\code{promethee2$summary()}}
\item \href{#method-promethee2-sensitivity}{\code{promethee2$sensitivity()}}
\item \href{#method-promethee2-clone}{\code{promethee2$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-promethee2-new"></a>}}
\if{latex}{\out{\hypertarget{method-promethee2-new}{}}}
\subsection{Method \code{new()}}{
public constructor for the promethee2 class. Validates input parameters
 and computes model.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{promethee2$new(
  pm,
  pref_function,
  w,
  minmax = "max",
  i_threshold = NULL,
  p_threshold = NULL,
  im_threshold = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{pm}}{Matrix or data frame containing the performance table. Each
row corresponds to an alternative, and each column to a criterion.
only numeric values expercted. Rows and columns are expected to be
named.}

\item{\code{pref_function}}{vector, specifies type of function used to compute
preferences. Need to be set for each criterion. Possible values are:
'default', 'U-shape', 'V-shape', 'level', 'linear', 'Gaussian'. Choice
of function type will decide on what type of threshold (if any) is
required for computation. Each criterion can use different preference
function.}

\item{\code{w}}{vector containing the weights of the criteria. Values need to
0 <= wi <= 1, sum(wi) = 1}

\item{\code{minmax}}{can be set to either value or vector. Value (min or max)
is usable in situation when all criteria are either benefit or cost
(are not mixed). If Criteria orientation is mixed, vector is required
to set criterion orientation right.}

\item{\code{i_threshold}}{vector containing indifference threshods for
criteria. Not all types of performance functions require it. The
parameter must be used if there is at least one criterion, for which it
is required. Values for all other criteria should be 0 (and will not be
used during computations). Only 'U-shape', 'level', 'linear' functions
need this threshold.}

\item{\code{p_threshold}}{vector containing prefference threshods for criteria.
Not all types of performance functions require it. The parameter must
be used if there is at least one criterion, for which it is required.
Values for all other criteria should be 0 (and will not be used during
computations). Only 'V-shape', 'level', 'linear' functions need this
threshold.}

\item{\code{im_threshold}}{vector containing intermetiate thresholds for
criteria. only Gaussian type performance functions rewuire this type of
threshold. If prefference and indifference thresholds are present, the
PROMETHEE function will try to 'gues' intermediate threshold as value
right in the middle between these thresholds.}
}
\if{html}{\out{</div>}}
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{# Example from Fuzzy TOPSIS book (see references)
# ammended error in tab. 4.9, the computation presumes maximization of
# all criteria
PM <- cbind(
  c(80, 65, 83, 40, 52, 94),
  c(90, 58, 60, 80, 72, 96),
  c(600, 200, 400, 1000, 600, 700),
  c(54, 97, 72, 75, 20, 36),
  c(8, 1, 4, 7, 3, 5),
  c(5, 1, 7, 10, 8, 6)
)
colnames(PM) <- c('C1', 'C2', 'C3', 'C4', 'C5', 'C6')
rownames(PM) <- c('A1', 'A2', 'A3', 'A4', 'A5', 'A6')
minmax <- 'max'
shape <- c('U-shape', 'V-shape', 'linear', 'level', 'default',
           'Gaussian')
p <- c(10, 0, 450, 50, 0, 0) #indifference threshold
q <- c(0, 30, 50, 10, 0, 0) #prefference threshold
s <- c(0,0,0,0,0,5) #intermediate threshold
w <- c(0.1667, 0.1667, 0.1667, 0.1667, 0.1667, 0.1665)
result <- promethee2$new(PM, shape, w, minmax, q, p, s)
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-promethee2-compute"></a>}}
\if{latex}{\out{\hypertarget{method-promethee2-compute}{}}}
\subsection{Method \code{compute()}}{
Computes PROMETHEE II model based on parametrs specified in constructor.
 Normally this methods does not need to be run manually as constructor
 calls it automatically.

Manual re-computation si required only if the user changes class' fields
 without using the constructor.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{promethee2$compute()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-promethee2-summary"></a>}}
\if{latex}{\out{\hypertarget{method-promethee2-summary}{}}}
\subsection{Method \code{summary()}}{
Creates summary for PROMETHEE II model and sends it to console.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{promethee2$summary()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-promethee2-sensitivity"></a>}}
\if{latex}{\out{\hypertarget{method-promethee2-sensitivity}{}}}
\subsection{Method \code{sensitivity()}}{
test sensitivity of the model to changes in the thresholds.

Provides sens_i (for indifference threshold), sens_p (for prefference
 threshold) and sens_im (for intermediate treshold) dataframes in
 structure:

\itemize{
  \item criterium
  \item from - lower bound of sensitivity
  \item default - value computed by original model
  \item to - upper bound of sensitivity
  \item function - type of preference function for criterium
}

Dataframes do have a numeric value with lower/upper bound of
 sensitivity identifying last value of the threshold for which the
 result still doesn't change.

If no such value is identified "insens." is provided.

Also note that PROMETHEE function is complex, because of existence of
 "preference" functions, which are stated separately for each criterium
 and each of these has a different requirements on types of thresholds
 it uses. For example level and linear functions use both preference and
 indifference thresholds (but not intermediate). V-shape function uses
 prefference threshold only, U-shape uses indifference threshold only.

Gaussian function uses intermediate threshold only, but if preference
 andindifference thresholds are provided, the sensitivity is being
 tested on in interval between these two.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{promethee2$sensitivity(step = 100)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{step}}{number of steps to divide threshold testing interval
(default: 100)}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
dataframes sens_i, sens_p and sens_im with sensitivity limit for
 the criteria
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-promethee2-clone"></a>}}
\if{latex}{\out{\hypertarget{method-promethee2-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{promethee2$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
