% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/promethee3.R
\name{promethee3}
\alias{promethee3}
\title{computations of partial preference using PROMETHEE III method}
\description{
PROMETHEE stands for Preference ranking organization method for enrichment
 evaluation. Promethee II method is intended for establishment of full
 ranking of the alternatives, by evaluation of positive and negative
 prefference flows in pairweise comparisons of the alternatives.

Difference between positive and negative flows forms net outranking flow.
 PROMETHEE III function is usable for partial preorder, similarly to
 \link{promethee1}, but uses intervals for establishing preorder.

Method starts with quantitatively expressed performance of the alternatives
 in the criteria. Positive, negative and net flows is computed using
 \code{\link{PROMETHEE}} function (see PROMETHEE function documentation for
 details on computation), in same way as in \link{promethee1} and
 \link{promethee2}. The difference is in what the method does with the
 results next.

\mjsdeqn{s_{err} = \frac{sd_{net}}{\sqrt{n}}}

Where \mjseqn{s_{err}} ... standard error, \mjseqn{sd_{net}} standard
 deviation of net flow, n ... number of alternatives.

For each alternative we then specify x and y limit computed as:

\mjsdeqn{x_{lim} = net_i - s_{err}}

\mjsdeqn{y_{lim} = net_i + s_{err}}

Where x limit is lover limit of of the interval and y is the upper limit,
 \mjseqn{s_{err}} ... is standard error.

Partial preference is then  established based on comparing lower and upper
 limits of the alternatives.

If \mjseqn{x_{lim}(a) > y_{lim}(b)} then alternative is prefered to b: aPb.
 If \mjseqn{x_{lim}(a) == y_{lim}(b)} than we are clearly indifferent to the
 alternatives: aIb. Otherwise alternative b is prefered to a.

Method does not provide ranking.

Limit comparison can be seen as an alternative implementation of thresholds
 as the performance must exceed some limit for the alternative to be
 considered prefered.

Note: the implementation of function is partially inspired by implementation
 of PROMETHEE III portion of promethee123 package, thou this implementation
 provides different output and utilizes general PROMETHEE function developed
 for PROMETHEE I and II functions.
}
\examples{

## ------------------------------------------------
## Method `promethee3$new`
## ------------------------------------------------

#Example from Fuzzy TOPSIS book (see references)
#ammended error in tab. 4.9, the computation presumes maximization of
# all criteria
PM <- cbind(
  c(80, 65, 83, 40, 52, 94),
  c(90, 58, 60, 80, 72, 96),
  c(600, 200, 400, 1000, 600, 700),
  c(54, 97, 72, 75, 20, 36),
  c(8, 1, 4, 7, 3, 5),
  c(5, 1, 7, 10, 8, 6)
)
colnames(PM) <- c('C1', 'C2', 'C3', 'C4', 'C5', 'C6')
rownames(PM) <- c('A1', 'A2', 'A3', 'A4', 'A5', 'A6')
minmax <- 'max'
shape <- c('U-shape', 'V-shape', 'linear', 'level', 'default',
 'Gaussian')
p <- c(10, 0, 450, 50, 0, 0) #indifference threshold
q <- c(0, 30, 50, 10, 0, 0) #prefference threshold
s <- c(0,0,0,0,0,5) #intermediate threshold
w <- c(0.1667, 0.1667, 0.1667, 0.1667, 0.1667, 0.1665)
result <- promethee3$new(PM, shape, w, minmax, q, p, s)
}
\references{
ALAOUI, Mohamed El. Fuzzy TOPSIS: Logic, Approaches, and Case Studies. Boca
 Raton: CRC Press, 2021. 216 s. ISBN 978-0-367-76748-8.

BRANS, Jean-Pierre; DE SMET, Yves. PROMETHEE methods. In: Multiple criteria
 decision analysis. Springer, New York, NY, 2016. p. 187-219. DOI:
 \url{https://dx.doi.org/10.1007/978-1-4939-3094-4_6}.

Moreira, M.A.L., dos Santos, M., Gomes, C.F.S. promethee123 package.
 \url{https://cran.r-project.org/web/packages/promethee123/index.html}
}
\author{
Pavel Šenovský \email{pavel.senovsky@vsb.cz}
}
\keyword{PROMETHEE}
\keyword{promethee3}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{pm_orig}}{original (not transformed) performance matrix of
alternatives in criteria}

\item{\code{pm}}{performance matrix of alternatives in criteria (all criteria
are maximized)}

\item{\code{pref_function}}{vector, specifies type of function used to compute
preferences. Need to be set for each criterion. Possible values are:
'default', 'U-shape', 'V-shape', 'level', 'linear', 'Gaussian'. Choice
of function type will decide on what type of threshold (if any) is
required for computation. Each criterion can use different preference
function.}

\item{\code{w}}{vector of weights}

\item{\code{minmax}}{direction (max or min) of criteria optimization}

\item{\code{i_threshold}}{vector of indifference thresholds}

\item{\code{p_threshold}}{vector of proference thresholds}

\item{\code{im_threshold}}{vector containing intermetiate thresholds for
criteria. only Gaussian type performance functions rewuire this type of
threshold. If prefference and indifference thresholds are present, the
PROMETHEE function will try to 'gues' intermediate threshold as value
right in the middle between these thresholds.}

\item{\code{positiveFlow}}{vector representing how the alternative is preffered
to other alternatives}

\item{\code{negativeFlow}}{vector representing how altenative is outranked by
other alternatives}

\item{\code{netFlow}}{positive - negative flow, forms an indicator PROMETHEE II
uses to directly rank the alternatives}

\item{\code{preferenceDegree}}{matrix representing aggregated weighted
preferences of the alternatives across the criteria}

\item{\code{preferenceDegreeUnw}}{list of matrixes with unweighted preferences,
separate matrix for each criterion}

\item{\code{pairweiseComparison}}{list of matrixes measuring nominal
differences in alternatives performance in criterions. Separate
matrixes are constructed for each criterion.}

\item{\code{preferenceMatrix}}{preference matrix describing ourranking
relation between the alternatives}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-promethee3-new}{\code{promethee3$new()}}
\item \href{#method-promethee3-compute}{\code{promethee3$compute()}}
\item \href{#method-promethee3-summary}{\code{promethee3$summary()}}
\item \href{#method-promethee3-sensitivity}{\code{promethee3$sensitivity()}}
\item \href{#method-promethee3-clone}{\code{promethee3$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-promethee3-new"></a>}}
\if{latex}{\out{\hypertarget{method-promethee3-new}{}}}
\subsection{Method \code{new()}}{
Public constructor to assemble promethee3 object.

First it validates inpust, then it computes the model using PROMETHEE
 III method. See class documentation for computational details of it.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{promethee3$new(
  pm,
  pref_function,
  w,
  minmax = "max",
  i_threshold = NULL,
  p_threshold = NULL,
  im_threshold = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{pm}}{Matrix or data frame containing the performance table. Each
row corresponds to an alternative, and each column to a criterion. only
numeric values expercted. Rows and columns are expected to be named.}

\item{\code{pref_function}}{vector, specifies type of function used to compute
preferences. Need to be set for each criterion. Possible values are:
'default', 'U-shape', 'V-shape', 'level', 'linear', 'Gaussian'. Choice
of function type will decide on what type of threshold (if any) is
required for computation. Each criterion can use different preference
function.}

\item{\code{w}}{vector containing the weights of the criteria. Values need to
\mjseqn{0 \le w_i \le 1, \sum w_i = 1}}

\item{\code{minmax}}{can be set to either value or vector. Value (min or max)
is usable in situation when all criteria are either benefit or cost
(are not mixed). If Criteria orientation is mixed, vector is required
to set criterion orientation right.}

\item{\code{i_threshold}}{vector containing indifference threshods for
criteria. Not all types of performance functions require it. The
parameter must be used if there is at least one criterion, for which it
is required. Values for all other criteria should be 0 (and will not be
used during computations). Only 'U-shape', 'level', 'linear' functions
need this threshold.}

\item{\code{p_threshold}}{vector containing prefference threshods for
criteria. Not all types of performance functions require it. The
parameter must be used if there is at least one criterion, for which it
is required. Values for all other criteria should be 0 (and will not be
used during computations). Only 'V-shape', 'level', 'linear' functions
need this threshold.}

\item{\code{im_threshold}}{vector containing intermetiate thresholds for
criteria. only Gaussian type performance functions rewuire this type of
threshold. If prefference and indifference thresholds are present, the
PROMETHEE function will try to 'gues' intermediate threshold as value
right in the middle between these thresholds.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
initialized and computed promethee3 R6 class.
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{#Example from Fuzzy TOPSIS book (see references)
#ammended error in tab. 4.9, the computation presumes maximization of
# all criteria
PM <- cbind(
  c(80, 65, 83, 40, 52, 94),
  c(90, 58, 60, 80, 72, 96),
  c(600, 200, 400, 1000, 600, 700),
  c(54, 97, 72, 75, 20, 36),
  c(8, 1, 4, 7, 3, 5),
  c(5, 1, 7, 10, 8, 6)
)
colnames(PM) <- c('C1', 'C2', 'C3', 'C4', 'C5', 'C6')
rownames(PM) <- c('A1', 'A2', 'A3', 'A4', 'A5', 'A6')
minmax <- 'max'
shape <- c('U-shape', 'V-shape', 'linear', 'level', 'default',
 'Gaussian')
p <- c(10, 0, 450, 50, 0, 0) #indifference threshold
q <- c(0, 30, 50, 10, 0, 0) #prefference threshold
s <- c(0,0,0,0,0,5) #intermediate threshold
w <- c(0.1667, 0.1667, 0.1667, 0.1667, 0.1667, 0.1665)
result <- promethee3$new(PM, shape, w, minmax, q, p, s)
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-promethee3-compute"></a>}}
\if{latex}{\out{\hypertarget{method-promethee3-compute}{}}}
\subsection{Method \code{compute()}}{
Computes PROMETHEE III model based on parametrs specified in constructor.
 Normally this methods does not need to be run manually as constructor
 calls it automatically.

Manual re-computation si required only if the user changes class' fields
 without using the constructor.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{promethee3$compute()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-promethee3-summary"></a>}}
\if{latex}{\out{\hypertarget{method-promethee3-summary}{}}}
\subsection{Method \code{summary()}}{
Creates summary for PROMETHEE III model and sends it to console.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{promethee3$summary()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-promethee3-sensitivity"></a>}}
\if{latex}{\out{\hypertarget{method-promethee3-sensitivity}{}}}
\subsection{Method \code{sensitivity()}}{
test sensitivity of the model to changes in the thresholds.

Provides sens_i (for indifference threshold), sens_p (for prefference
 threshold) and sens_im (for intermediate treshold) dataframes in
 structure:

\itemize{
  \item criterium
  \item from - lower bound of sensitivity
  \item default - value computed by original model
  \item to - upper bound of sensitivity
  \item function - type of preference function for criterium
}

Dataframes do have a numeric value with lower/upper bound of
 sensitivity identifying last value of the threshold for which the
 result still doesn't change.

If no such value is identified "insens." is provided.

Also note that PROMETHEE function is complex, because of existence of
 "preference" functions, which are stated separately for each criterium
 and each of these has a different requirements on types of thresholds
 it uses. For example level and linear functions use both preference and
 indifference thresholds (but not intermediate). V-shape function uses
 prefference threshold only, U-shape uses indifference threshold only.

Gaussian function uses intermediate threshold only, but if preference
 andindifference thresholds are provided, the sensitivity is being
 tested on in interval between these two.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{promethee3$sensitivity(step = 100)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{step}}{number of steps to divide threshold testing interval
(default: 100)}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
dataframes sens_i, sens_p and sens_im with sensitivity limit for
 the criteria
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-promethee3-clone"></a>}}
\if{latex}{\out{\hypertarget{method-promethee3-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{promethee3$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
