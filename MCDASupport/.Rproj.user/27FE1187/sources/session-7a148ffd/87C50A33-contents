---
title: "WSM-šablona"
author: "Pavel Šenovský"
date: '2023-09-15'
output:
  html_document: default
---

# Šablona semestrálního projektu

Tato šablona v sobě kombinuje popis RMarkdown a také jednoduchý příklad výpočtu problému multikriteriální analýzy pomocí metody vážených součtů (WSM - weighted sum method). Pokud se rozhodněte použít tuto šablonu (což není povinné, můžete provést výpočet také ručně), je potřeba upravit text a kód tak, aby representoval Váš problém.

Tedy tento soubor bude obsahovat kopletně všechny části semestrálního projektu.

# Základy markdown

V řádcích 1 - 7 je hlavička title, author a date jsou samovysvětlující (název, autor a datum vytvoření). Output specifikuje výstup, do kterého se bude generovat výsledek Vaší práce. Předvolen je HTML, tzn. že výsledkem bude webová stránka, která v sobě bude obsahovat všechna potřebná data včetně grafů (v jednom HTML souboru).

Kromě HTML je možno generovat výstupy do PDF nebo Wordu, ale HTML se z hlediska funkčnosti nejjednodušší. Změnu výstupu můžete realizovat pomocí rozkliknutí šipky vedle tlačítka Knit v RStudio a volbou výstupu.

Z hlediska formátování R markdown (verze markdown jazyka přizpůsobená pro R), přikládám některé tipy.

Nadpisy začínají vždy symbolem \#, počet \# pak určí úroveň nadpisu, proto:

* \# nadpis první úrovně
* \#\# nadpis druhé úrovně 
* atd. (je podporováno 6 úrovní nadpisů)

Odstavcový text píšeme běžným způsobem - odstavce musí být odděleny vždy prázdným řádkem.

Text *kurzívou* je vždy ohraničen znakem \*. **Tučný** text zase znaky \_\_ (2 podtržítka).

Odrážky vždy začínají \* a mezerou, např.

-   odrážka 1
-   odrážka 2
    -   odrážka 2.1 - další úrověň přidáme použitím tabelátoru

Obdobným způsobem můžete přidat také číslovaný seznam

1)  číslo 1
2)  číslo 2

Odkaz přidáte následovně [Markdown cheatscheat](https://www.markdownguide.org/cheat-sheet/). V hranatých závorkách je popisek a v kulatých samotný odkaz.

Specifický pro R markdown jsou segmenty kódu. Bez nich by se jednalo pouze o markdown, např.:

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
library(knitr)
```

Výše uvedený blok je povinný a obsahuje základní zprovoznění funkce Knitr - tedy schopnosti RStudia generovat výstupy. Výpočetný blok je je vždy ohranize třemi znaky \` (back tick) na račátku bloku je ve složených závorkách určení jazyka, ve kterém je blok napsán. Rmarkdown přirozeně primárně podporuje R (zapisujeme ale malé r), ale také Python, ten ale v tomto případě použivat nebudeme.

Následuje název bloku. Ve výše uvedeném bloku je název "setup". Název může být víceslový, může obsahovat mezery, nesmí ale obsahovat čárku. Čárka totiž signalizuje že pro segment kódu jsou dostupné ještě další parametry, v našem případě je použit pouze jeden a to "include=FALSE". Ten způsobí, že když spustíme funkci knit (vygenerujeme výsledek), daný segment kódu se v něm nezobrazí.

To může být výhodné pro bloky, které provádějí různá nastavení, která z hlediska informace poskytované uživateli výstupu, nepřinášení v podstatě žádný užitek. U většíny segmentů kódu, ale budeme kód chtít mít viditelný! Důvodem je, že tímto způsobem vidím nejen výstup, ale také způsob, jakým jsem k němu došel.

# Výběr e-ink čtečky - aplikace metody vážených součtů (WSM - Weighted Sum Method)

K realizaci výpočtu budeme používat knihovnu MCDASupport v poslední verzi (v0.26). Je jí funkčnost závisí na řadě dalších knihoven, které budeme potřebovat mít nainstalovány v našem R prostředí, aby výpočet mohl proběhnout.

Instalaci zajišťuje následující segment kódu. Závislosti jsou instalovány z CRAN (centrálního repozitáře knihoven R). Funguje to tak, že do proměnné packages vkládáme seznam potřebných knihoven a následně tento seznam porovnáváme s instalovanými knihovnami. 

Samotná knihovna MCDASupport, ale v CRAN není a proto je potřeba ji instalovat samostatně. O to se stará zbytek bloku kódu. Prosím mějte na paměti, že v době, kdy budete tuto šablonu používat již odkazovaná verze nemusí být k dispozici (může existovat např. novější verze). Proto můžete chtít také zkontrolovat [domácí stránky](https://fbiweb.vsb.cz/~sen76), sekce publikace a získat odtud odkaz na poslední vezi knihovny. Následující kód by pak musel být patřičným způsobem upraven.

Poslední řádek pak knihovnu MCDASupport připojí a budeme tak moci přímo používat její funkce.

Pro úplnost symbol hashe v bloku kódu pro R znamená komentář.

```{r prepere the environment, include=FALSE}
# zjisti potřebné knihovany a chybějící doinstaluj
packages <- c("mathjaxr", "graphics", "igraph", "diagram", "stats", "dplyr", "visNetwork", "plotly", "tidyr")
install.packages(setdiff(packages, rownames(installed.packages())))  
if(length(setdiff(c("MCDASupport"), rownames(installed.packages()))) == 1){
  # MCDASupport knihovna není instalovaná, nainstalujeme ji ze zdrojových kódů
  # pokud následující soubor není dostupný, manálně najděte správný odkaz https://fbiweb.vsb.cz/~sen76 a cestu upravte dle potřeby
  url <- 'https://fbiweb.vsb.cz/~sen76/data/uploads/programy/MCDASupport_0.26.tar.gz'
  destfile <- paste(getwd(), '/MCDASupport_0.26.tar.gz')
  download.file(url, destfile)
  install.packages("MCDASupport_0.26.tar.gz", repos=NULL, type="source")  
}
library(MCDASupport) # aktivuj knihovnu
library("tidyr")
```

# Připrava vstupů

Pro náš příklad budeme vybírat čtečku elektronických knih - tento příklad je mimochodem vyřešen také ve skriptech a to jak ručně tak pomocí R (s použití starší trochu jinak fungující verze knihovny). 

Všimněte si prosím, že se primárně věnuji popisu R a R markdown, nikoliv, vysvětlení okolností výběru čtečky. Je to z toho důvodu, že tento příklad je ve skriptech a byl rozbrán také na přednáškách. 

** Až budete psát semestrální projekt, nebudete se věnovat textovému popisu R vůbec! Soustředte se na popis problému a Vašich myšlenkových pochodů, jednotlivých kroků řešení a voleb, které jste v rámci nich učinili.**

Metoda WSM pracuje pouze s číselnými hodnotami. Pokud náš rozhodovací problém pracuje s jiným typem hodnot, musíme je transformovat do numerické podoby! Porovnejte data v segmentu kódu níže a základní data v tabulkách z přednášky nebo ze skript.

Pro zjednodušení je výkonnostní matice (matice prostých užitností) PM zadaná po sloupcích (cbind), které reprezentují kritéria, řádky pak reprezentují varianty řešení (jedtolivé čtečky).

Alternativně by bylo možné připravit tabulku v externím programu, např. MS Excel, vyexportovat ji do CSV souboru a ten načíst pomocí funkce read.csv.

Pro zjednodušení byla níže již vynechána kritéri, jejiž hodnoty byly pro všechna kritéria stejné a tedy neměly potenciál přispět k rozhodnutí.

```{r performance matrix}
PM <- as.data.frame(cbind(
  c(80, 80, 100, 80, 80),
  c(185, 200, 206, 198, 180),
  c(50, 100, 50, 100, 100),
  c(100, 20, 100, 100, 100),
  c(2100, 1700, 1700, 1700, 1900),
  c(3400, 3800, 3300, 3400, 4200)
))
colnames(PM) <- c('display', 'váha', 'tlačítka', 'front light', 'baterie', 'cena')
rownames(PM) <- c('Kobo Gle', 'Sony PRS-T3', 'Kindle Paperwhite 2', 'Pocketbook Touch Lux', 
                  'Bookeen Odyssey HD FL')
w <- c(5, 2, 4, 5, 3, 1)
kable(PM, caption='Matice prostých užitností')
```

Jak je patrné z výše uvedené matice, jsou jednotlivá kritéria ve svých původnéch jednotkách nebo v případě nečíslených kritérií v jejich číselných ekvivalentech. Takové údaje nelze přímo porovnávat, z tohoto důvodu před dalším použitím je potřeba hodnoty normalizovat, tedy převést je na jednotnou škálu. Jedná se především o kritéria:

-   váha
-   baterie
-   cena

Nejprve provedeme jednoduchou normalizaci minmax, která převede čkálu do intervalu \<0;1\> a tu vynásobíme 100, abychom získali škálu v intervalu \<0;100\>. V tomto kroku změníme také případně "směr" kritéria a to tak, aby hodnoty byly vždy maximalizovány. Ve výsledku tak hodnota 0 bude vždy nejhorší a 100 % nejlepší.

```{r generate normalized PM}
normPM <- PM
normPM$váha <- norm_minmax(PM$váha, minmax = 'min') * 100
normPM$baterie <- norm_minmax(PM$baterie) * 100 #minmax is implicitly 'max'
normPM$cena <- norm_minmax(PM$cena, minmax = 'min') * 100
kable(normPM, caption = 'Normalizovaná matice užitku')
```

Z hlediska dalšího vyhodnocevání je potřeba doplnit do hodnocení také případné další informace související s rozhodovacím kontextem. Min-max vždy povede k intervalu \<0;100\>. Z hlediska interpretace to znamená ale, že 0 je nevyhovující, zatímco 100 je nejlepší možná hodnota. Uvažováním o kritíriích a jejich hodnotě ale můžeme doplnit do výpočtu další údaje a získat tak lepší výsledek.

Např. maximální cena čtečky je 4200,- Kč. Pokud použijeme minmax bude to odpovídat užitnosti 0. Z hlediska rozhodování, ale můžeme toto tvrzení upravit - dle potřeb, dle iterpretace problému. Nejvyšší cena určitě není ideální, ale není absolutně nepřijatelná, řekněme, že bude reprezentovat užitnost 40 %. To ale zároveň znamená do zbývajících 60 % se musí vlézt všechny ostatní hodnoty. 

Budeme postupovat tak, že nejprve převedeme hodnoty do intervalu \<0;60\> a pak k nim přičteme 40 tak, abychom je posunuli doprava, do intervalu \<40;100\>.

**V semestrálním projektu neprovádějte teoretické zdůvodnění výpočtu, ale volbu hranic a jejich zdůvodnění!**

```{r rescale normalized PM}
normPM2 <- normPM
normPM2$cena <- normPM$cena * 0.6 + 40 # nejhorší hodnota = 40 %
normPM2$baterie <- normPM$baterie * 0.25 + 75 # nejhorší hodnota = 75 %
normPM2$váha <- normPM$váha * 0.3 + 70 # nejhorší hodnota = 70 %
kable(normPM2, caption = 'Škálovaná normalizovaná matice užitku')
```

# Výsledky analýzy

```{r WSM}
results <- mcda_wsm(normPM2, w, 'max')
kable(results$resultTable, caption = 'Vážené sumy alternativ řešení')
results$scoreM # graf vizualizojící příspěvek jednotlivých kritérií k celkovému výsledku alternativy
dom <- mcda_get_dominated(normPM) 
plot.prefM(dom$dominationMatrix) # graf vizualizující vztahy "jednoduché" dominance v rozhodovacím problému
```

**V semestrálním projektu každý z výše uvedených výstupů okomentujte. Doplňte také celkové zhodnocení se svým doporučením k řešení rozhodovacího problému. Vaše doporučení by přitom mělo být konzistentní s vypočtenými výsledky.**

Ve skriptech je dále ukázáno obdobné vyhodnocení rizik. V této šabloně jsem takto nepostupoval. Pokud ale chcete tyto kroky doplnit není nic jednoduššího budete používat stejný postup (stejnou metodu) jako při hodnocení užitku. jako váha vám poslouží pravděpodobnost výskytu rizika. Užitnost bude v tomto případě reprezentovat komponenta dopadu rizika. Nezapomeňte, že rizika vždy minimalizujeme!
