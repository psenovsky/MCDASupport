"0","tsTransform = function(tab, typ = ''){"
"0","  t = tab %>%"
"0","    select(-""Province.State"", -Long, -Lat) %>%"
"0","    gather(date, cases, -""Country.Region"") %>%"
"0","    rename(country = ""Country.Region"") %>%"
"0","    group_by(country, date) %>%"
"0","    summarize(confirmed = sum(cases))"
"0","  t$date = str_remove(t$date, ""[X]"")"
"0","  t$date = as.Date(t$date, '%m.%d.%y')"
"0","  t$country[t$country == 'Taiwan*'] <- 'Taiwan'"
"0","  t$country[t$country == 'Korea, South'] <- 'South Korea'"
"0","  staty = unique(t$country)"
"0","  newCovid = NULL"
"0","  for (stat in staty) {"
"0","    a = t[t$country == stat,]"
"0","    a = a[order(a$date),]"
"0","    a = mutate(a, cases_day = (confirmed - lag(confirmed, n = 1L)))"
"0","    a = mutate(a, prc_day = (cases_day/ (lag(confirmed, n = 1L)/100)))"
"0","    if(typ == 'conf'){"
"0","      a = mutate(a, cases_week = rollsum(cases_day, k=7, align = 'right', fill = NA))"
"0","      a = mutate(a, cases_2week = rollsum(cases_day, k=14, align = 'right', fill = NA))"
"0","      a = mutate(a, cases_week_m5 = lag(cases_week, n = 5L))"
"0","      a = mutate(a, R = cases_week/cases_week_m5)"
"0","      a = mutate(a, R7d = rollmean(R, k = 7, fill = NA))"
"0","    }"
"0","    newCovid = rbind(newCovid, a)"
"0","  }"
"0","  t = newCovid %>%"
"0","    mutate(cases_day_07da = rollmean(cases_day, k = 7, fill = NA))"
"0","  newCovid = NULL"
"0","  return(t)"
"0","}"
"0",""
"0","covid_data = tsTransform(ts_conf, typ='conf')"
"2","`summarise()` has grouped output by 'country'. You can override using the `.groups` argument.
"
"0","covid_death = tsTransform(ts_death)"
"2","`summarise()` has grouped output by 'country'. You can override using the `.groups` argument.
"
"0","ts_conf = NULL"
"0","ts_death = NULL"
